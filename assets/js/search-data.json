{
  
    
        "post0": {
            "title": "Artificial Intelligence from Novice to Professional",
            "content": ". Why this post? . There is a general notion that Artificial Intelligence is all about algorithms. If you look around most of the courses, books, blogs, etc, you will find that most of them cover how you can apply certain algorithms and further optimize those algorithms. . After working on a few real-world AI/ML projects, you will realize that while algorithms are at the core, AI is much more than algorithms. From identifying &amp; assessing AI opportunities in your organization/department to deploying and maintaining the solutions in production, a lot goes into AI/ML projects. . In this post, I am going to briefly touch every aspect of AI/ML project lifecycle. The good news is, as a data scientist you need not master every aspect, but knowing those areas to some extent will help you contribute better in real-world projects. . A single post can’t make you an AI professional, but it can ask relevant questions &amp; increase awareness, seeking answers to these questions can help you build your own AI roadmap. . We can segregate all these aspects of AI into 5 parts: AI Introduction, AI Pre-requisites, AI Concepts &amp; Algorithms, Enterprise AI &amp; Peripherals of AI . I. AI Introduction . AI is a team game, every aspiring AI role needs to have a common understanding of AI/ML field. This part covers a simple What, Why &amp; How of AI: . — Why you should learn AI? . — Why AI is important? . — What is Artificial Intelligence? . — How an end-to-end AI project looks like? . — What are the roles in AI projects and who does what? . II. AI Pre-requisites . AI/ML has a steep learning curve because it is an amalgamation of many fields (Statistics, IT &amp; Domain etc). And some knowledge of these fields is required before you can start grasping AI/ML concepts. This part covers the pre-requisites of AI: . — What topics of maths you should cover? . — What programming languages, libraries &amp; frameworks you should be aware of? . — How does data move in an organization? . — How is it stored and processed? . III. AI Concepts &amp; Algorithms . AI/ML in itself is quite a vast field and have different techniques and frameworks to deal with different kind of real-world problems. This part covers major AI/ML techniques and what to use when: . — What are the major types of AI techniques? . — When to use what? Main concepts &amp; algorithms ML, DL &amp; RL? . IV. Enterprise AI . Learning AI/ML concepts &amp; algorithms are not enough, you will be solving some business problems with what you have learned. You need to be aware of what happens when these concepts &amp; algorithms are applied within an enterprise. This part covers the aspects of enterprise AI: . - What is the difference between Hackathons &amp; Real-world projects? . - How to operationalize AI? . - How to build AI Strategy? . - Why ethics &amp; explainability is important &amp; how can we make AI explainable? . V. Peripherals of AI . Apart from learning concepts and their applications, you may have specific needs at the moment like you want to get into the AI field or you need to lead an AI initiative in your organization. This part covers those specific needs: . - How you can get into AI field? . - How to lead AI initiatives in your organization? . - How to future-proof your AI career? . Conclusion . I hope by now you have got an idea of what it takes to work on AI projects in the real world. Due to different but overlapping fields, it is really hard to get in-depth knowledge of every aspect of an AI aspirant. . But what you can do is to build a T-shape skill-set in the AI field, where you go in-depth in the aspect of your choice and have handy knowledge of other related aspects. . I will cover the above-mentioned aspects of AI thoroughly in upcoming posts, stay tuned. . . Ankit Rathi is an AI architect, published author &amp; well-known speaker. His interest lies primarily in building end-to-end AI applications/products following best practices of Data Engineering and Architecture. . Why don’t you connect with Ankit on Twitter, LinkedIn or Instagram .",
            "url": "https://ankitrathi169.github.io/data-and-ai/markdown/2020/01/23/artificial-intelligence-from-novice-to-professional.html",
            "relUrl": "/markdown/2020/01/23/artificial-intelligence-from-novice-to-professional.html",
            "date": " • Jan 23, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "An Example Markdown Post",
            "content": "Example Markdown Post . Basic setup . Jekyll requires blog post files to be named according to the following format: . YEAR-MONTH-DAY-filename.md . Where YEAR is a four-digit number, MONTH and DAY are both two-digit numbers, and filename is whatever file name you choose, to remind yourself what this post is about. .md is the file extension for markdown files. . The first line of the file should start with a single hash character, then a space, then your title. This is how you create a “level 1 heading” in markdown. Then you can create level 2, 3, etc headings as you wish but repeating the hash character, such as you see in the line ## File names above. . Basic formatting . You can use italics, bold, code font text, and create links. Here’s a footnote 1. Here’s a horizontal rule: . . Lists . Here’s a list: . item 1 | item 2 | . And a numbered list: . item 1 | item 2 | Boxes and stuff . This is a quotation . . You can include alert boxes …and… . . You can include info boxes Images . . Code . You can format text and code per usual . General preformatted text: . # Do a thing do_thing() . Python code and output: . # Prints &#39;2&#39; print(1+1) . 2 . Formatting text as shell commands: . echo &quot;hello world&quot; ./some_script.sh --option &quot;value&quot; wget https://example.com/cat_photo1.png . Formatting text as YAML: . key: value - another_key: &quot;another value&quot; . Tables . Column 1 Column 2 . A thing | Another thing | . Tweetcards . Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 Footnotes . This is the footnote. &#8617; . |",
            "url": "https://ankitrathi169.github.io/data-and-ai/markdown/2020/01/14/test-markdown-post.html",
            "relUrl": "/markdown/2020/01/14/test-markdown-post.html",
            "date": " • Jan 14, 2020"
        }
        
    
  
    
        ,"post2": {
            "title": "Fastpages Notebook Blog Post",
            "content": "About . This notebook is a demonstration of some of capabilities of fastpages with notebooks. . With fastpages you can save your jupyter notebooks into the _notebooks folder at the root of your repository, and they will be automatically be converted to Jekyll compliant blog posts! . Front Matter . The first cell in your Jupyter Notebook or markdown blog post contains front matter. Front matter is metadata that can turn on/off options in your Notebook. It is formatted like this: . # &quot;My Title&quot; &gt; &quot;Awesome summary&quot; - toc:true- branch: master- badges: true- comments: true - author: Hamel Husain &amp; Jeremy Howard - categories: [fastpages, jupyter] . Setting toc: true will automatically generate a table of contents | Setting badges: true will automatically include GitHub and Google Colab links to your notebook. | Setting comments: true will enable commenting on your blog post, powered by utterances. | . The title and description need to be enclosed in double quotes only if they include special characters such as a colon. More details and options for front matter can be viewed on the front matter section of the README. . Markdown Shortcuts . A #hide comment at the top of any code cell will hide both the input and output of that cell in your blog post. . A #hide_input comment at the top of any code cell will only hide the input of that cell. . The comment #hide_input was used to hide the code that produced this. . put a #collapse-hide flag at the top of any cell if you want to hide that cell by default, but give the reader the option to show it: . #collapse-hide import pandas as pd import altair as alt . . put a #collapse-show flag at the top of any cell if you want to show that cell by default, but give the reader the option to hide it: . #collapse-show cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; . . Interactive Charts With Altair . Charts made with Altair remain interactive. Example charts taken from this repo, specifically this notebook. . Example 1: DropDown . # single-value selection over [Major_Genre, MPAA_Rating] pairs # use specific hard-wired values as the initial selected values selection = alt.selection_single( name=&#39;Select&#39;, fields=[&#39;Major_Genre&#39;, &#39;MPAA_Rating&#39;], init={&#39;Major_Genre&#39;: &#39;Drama&#39;, &#39;MPAA_Rating&#39;: &#39;R&#39;}, bind={&#39;Major_Genre&#39;: alt.binding_select(options=genres), &#39;MPAA_Rating&#39;: alt.binding_radio(options=mpaa)} ) # scatter plot, modify opacity based on selection alt.Chart(movies).mark_circle().add_selection( selection ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=&#39;IMDB_Rating:Q&#39;, tooltip=&#39;Title:N&#39;, opacity=alt.condition(selection, alt.value(0.75), alt.value(0.05)) ) . Example 2: Tooltips . alt.Chart(movies).mark_circle().add_selection( alt.selection_interval(bind=&#39;scales&#39;, encodings=[&#39;x&#39;]) ).encode( x=&#39;Rotten_Tomatoes_Rating:Q&#39;, y=alt.Y(&#39;IMDB_Rating:Q&#39;, axis=alt.Axis(minExtent=30)), # use min extent to stabilize axis title placement tooltip=[&#39;Title:N&#39;, &#39;Release_Date:N&#39;, &#39;IMDB_Rating:Q&#39;, &#39;Rotten_Tomatoes_Rating:Q&#39;] ).properties( width=600, height=400 ) . Example 3: More Tooltips . # select a point for which to provide details-on-demand label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=700, height=400 ) . Data Tables . You can display tables per the usual way in your blog: . movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; df = pd.read_json(movies) # display table with pandas df[[&#39;Title&#39;, &#39;Worldwide_Gross&#39;, &#39;Production_Budget&#39;, &#39;Distributor&#39;, &#39;MPAA_Rating&#39;, &#39;IMDB_Rating&#39;, &#39;Rotten_Tomatoes_Rating&#39;]].head() . Title Worldwide_Gross Production_Budget Distributor MPAA_Rating IMDB_Rating Rotten_Tomatoes_Rating . 0 The Land Girls | 146083.0 | 8000000.0 | Gramercy | R | 6.1 | NaN | . 1 First Love, Last Rites | 10876.0 | 300000.0 | Strand | R | 6.9 | NaN | . 2 I Married a Strange Person | 203134.0 | 250000.0 | Lionsgate | None | 6.8 | NaN | . 3 Let&#39;s Talk About Sex | 373615.0 | 300000.0 | Fine Line | None | NaN | 13.0 | . 4 Slam | 1087521.0 | 1000000.0 | Trimark | R | 3.4 | 62.0 | . Images . Local Images . You can reference local images and they will be copied and rendered on your blog automatically. You can include these with the following markdown syntax: . ![](my_icons/fastai_logo.png) . . Remote Images . Remote images can be included with the following markdown syntax: . ![](https://image.flaticon.com/icons/svg/36/36686.svg) . . Animated Gifs . Animated Gifs work, too! . ![](https://upload.wikimedia.org/wikipedia/commons/7/71/ChessPawnSpecialMoves.gif) . . Captions . You can include captions with markdown images like this: . ![](https://www.fast.ai/images/fastai_paper/show_batch.png &quot;Credit: https://www.fast.ai/2020/02/13/fastai-A-Layered-API-for-Deep-Learning/&quot;) . . Other Elements . Tweetcards . Typing &gt; twitter: https://twitter.com/jakevdp/status/1204765621767901185?s=20 will render this: Altair 4.0 is released! https://t.co/PCyrIOTcvvTry it with: pip install -U altairThe full list of changes is at https://t.co/roXmzcsT58 ...read on for some highlights. pic.twitter.com/vWJ0ZveKbZ . &mdash; Jake VanderPlas (@jakevdp) December 11, 2019 . Youtube Videos . Typing &gt; youtube: https://youtu.be/XfoYk_Z5AkI will render this: . Boxes / Callouts . Typing &gt; Warning: There will be no second warning! will render this: . Warning: There will be no second warning! . Typing &gt; Important: Pay attention! It&#39;s important. will render this: . Important: Pay attention! It&#8217;s important. . Typing &gt; Tip: This is my tip. will render this: . Tip: This is my tip. . Typing &gt; Note: Take note of this. will render this: . Note: Take note of this. . Typing &gt; Note: A doc link to [an example website: fast.ai](https://www.fast.ai/) should also work fine. will render in the docs: . Note: A doc link to an example website: fast.ai should also work fine. . Footnotes . You can have footnotes in notebooks, however the syntax is different compared to markdown documents. This guide provides more detail about this syntax, which looks like this: . For example, here is a footnote {% fn 1 %}. And another {% fn 2 %} {{ &#39;This is the footnote.&#39; | fndetail: 1 }} {{ &#39;This is the other footnote. You can even have a [link](www.github.com)!&#39; | fndetail: 2 }} . For example, here is a footnote 1. . And another 2 . 1. This is the footnote.↩ . 2. This is the other footnote. You can even have a link!↩ .",
            "url": "https://ankitrathi169.github.io/data-and-ai/jupyter/2020/01/01/test.html",
            "relUrl": "/jupyter/2020/01/01/test.html",
            "date": " • Jan 1, 2020"
        }
        
    
  
    
        ,"post3": {
            "title": "4 Types of Challenges in DS/AI Projects & Initiatives",
            "content": ". In this post, I have analyzed frequent challenges encountered by DS/AI leaders &amp; experts in their projects/initiatives. I have re-organized these challenges into 4 areas of concerns, my idea is to build a framework around these challenges to suggest possible solutions in upcoming posts. . . DS/AI promises considerable economic &amp; social benefits, even as it disrupts the way we work. Almost everyone agrees that it is a field which can change the world, from healthcare to countering terrorism and even arts &amp; sports. . DS/AI leaders &amp; experts are facing different challenges from ideation to productization, it is estimated that between 70% and 85% of DS/AI projects fail. . To get a holistic view of the challenges &amp; failures, I looked at various articles available on the internet about the challenges in DS/AI projects &amp; initiatives. You can find all the articles I referred at the end of this post. . In the past few weeks, I have also spoken to many DS/AI leaders &amp; experts on this topic and they have also given some useful insights. I will cover these specific insights into the challenges in the upcoming blog-posts. . In order to shed some light on the reasons why we observe such a high failure rate, I also analyzed the results of a survey conducted by Kaggle in 2017. You can see the full report here. The part of the survey relevant to this article is about the challenges companies face as far as their DS/AI efforts are concerned. The following chart shows the top fifteen challenges: . . While I am still documenting the challenges &amp; possible solutions, I can categorize these challenges in four broad segments: — Cultural challenges (right talent, data literacy, realistic expectations etc) — Data-related challenges (data access, data quality, lifecycle management etc) — Operational challenges (suitable operating model with specific roles &amp; responsibilities) — Technology-related challenges (appropriate tech-stack, right infrastructure etc). . . Challenges in DS/AI Projects . Based on the above-mentioned sources (surveys, articles &amp; experts) in this post, I have collected all the challenges and tried to categorize them into four areas of concern — Culture, Operation, Data, Technology: . Data Quality — Data | Talent Gap — Operations | Company Politics — Culture | Data Access — Operations | Data Literacy — Culture | Data Privacy — Data | SME Gap — Operations | Heterogeneous Tech-stack — Technology | Unrealistic Expectations — Culture | Co-ordination with IT &amp; other deptt — Operations | Stakeholders’ Buy-in — Culture | Sponsorship — Culture | Deployment — Operations | Algorithms Limitations — Technology | Data Consolidation — Data | Opportunity Assessment — Operations | Model Explainability — Technology | Agility — Operations | Data Security — Operations | Solving the Wrong Problem — Operations | Organizational Maturity — Culture | Storytelling — Culture | . Area of Concerns in DS/AI . Now, let’s consolidate the above challenges in the respective area of concerns: . Cultural Challenges . Company Politics, Data Literacy, Unrealistic Expectations, Stakeholders’ Buy-in, Organizational Maturity, Storytelling . Operational Challenges . Talent Gap, Data Access, SME Gap, Coordination with IT and other deptts, Deployment, Opportunity Assessment, Data Security, Solving the Wrong Problem . Data Challenges . Data Quality, Data Privacy, Data Consolidation . Technology Challenges . Heterogeneous Tech-stack, Algorithms Limitations, Model Explainability . What next? . I believe that if we categorize these challenges in the respective area of concerns, we can build a framework around it which can address these challenges and suggest possible solutions. . I intend to explore these possibilities in the upcoming blog-posts, if it looks interesting to you, stay tuned. . . Thank you for reading my post. I regularly write about Data &amp; Technology on LinkedIn &amp; Medium. If you would like to read my future posts then simply ‘Connect’ or ‘Follow’. Also, feel free to visit my webpage https://ankitrathi.com .",
            "url": "https://ankitrathi169.github.io/data-and-ai/markdown/2019/08/21/4-types-of-challenges-in-ds-ai-projects-initiatives.html",
            "relUrl": "/markdown/2019/08/21/4-types-of-challenges-in-ds-ai-projects-initiatives.html",
            "date": " • Aug 21, 2019"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "Ankit Rathi is a data &amp; AI architect, published author &amp; well-known speaker. His interest lies primarily in building end to end AI applications/products following best practices of Data Engineering and Architecture. . Ankit’s work at SITA aero has revolved around building FlightPredictor product &amp; strengthening the CoE capability. Earlier as a Principal Consultant at Genpact HCM, Ankit architected and deployed machine learning pipelines for various clients across different industries like Insurance, F&amp;A. He was previously a Tech Lead at RBS IDC where he designed and developed various data intensive applications in AML &amp; Mortgages area. . Ankit is a well-known author for various publications (Data Deft, Towards Data Science, Analytics Vidhya etc) on Medium where he actively contributes by writing blog-posts on concepts &amp; latest trends in Data Science. He is followed by 25K+ data science practitioners &amp; enthusiasts on LinkedIn. . Specialties: Data Science, Data Architecture, Data Strategy, Big Data, Cloud Computing . Tools/Technologies: SQL, Python, R, Spark, Azure, AWS, TensorFlow, Cassandra, Hadoop, Pig, Hive, Tableau, PowerBI, DevOps, CI/CD .",
          "url": "https://ankitrathi169.github.io/data-and-ai/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://ankitrathi169.github.io/data-and-ai/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}